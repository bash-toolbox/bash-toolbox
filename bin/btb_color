#!/usr/local/bin/bash

# vim: set tabstop=4 shiftwidth=4 softtabstop=4:
	#set -u

#==============================================================================
# Erstellung: Ralph Goestenmeier, 14.01.2016
#==============================================================================
	__DEPLOY_VERSION=2.00.01-01
	__DEPLOY_TIMESTAMP="2018-11-29 16:28:25"
	__DEPLOY_SCRIPTNAME="nps_color"

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
	THIS="$0"
	[[ -h "$THIS" ]] && THIS="$(readlink "$THIS")"

	HERE="$(cd $(dirname "$THIS"); pwd)"
	SELF="$(basename "$0")"

	HERE=$(cd "$(dirname $0)"; pwd)
	SELF=${0##*/}

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
HELP()
{
		cat <<-EOH
Help Text
Beispiele:
EOH

		exit 0
}
#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
	OPT_VERBOSE=YES
	OPT_DEBUGLEVEL=1

	OPT_YSN_WITH_NEWLINE=YES

	. $NPS_ROOT/etc/bash_toolbox

	OPT_TYP=TEXT

#------------------------------------------------------------------------------
# Parameter einlesen
#------------------------------------------------------------------------------
	S_OPTS="hvd:"
	L_OPTS="help,version,verbose,print,debug:,info"
	L_OPTS="${L_OPTS},with-cr,no-cr,typ:"

	GETOPTS=$(getopt -o $S_OPTS: --long $L_OPTS -n "$SELF" -- "$@")
	if [ $? != 0 ] ; then echo "Terminating..." >&2 ; exit 1 ; fi

	# Note the quotes around `$TEMP': they are essential!
	eval set -- "$GETOPTS"

	while true; do
		DEBUG 8 "handle option '$1'"

		case "$1" in
			-h|-\?|--help)	HELP												;;
			--version)		VERSION												;;
			--debug)		OPT_DEBUGLEVEL="$2"									;;

			--with-cr)		OPT_YSN_WITH_NEWLINE=YES							;;
			--no-cr)		OPT_YSN_WITH_NEWLINE=NO								;;

			--typ)			OPT_TYP="${2^^}"					; shift			;;

			--)				DEBUG 8 "end of options found"		; shift; break	;;

			*)				DEBUG 8 "add unhandled option $O"
							OPT_SASSCRIPT="$OPT_SASSCRIPT $O"	; shift			;;

		esac

		shift
	done

	OPT_LINE="$*"

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
	fg_black=30
	fg_red=31
	fg_green=32
	fg_yellow=33
	fg_blue=34
	fg_magenta=35
	fg_cyan=36
	fg_white=37

	bg_black=40
	bg_red=41
	bg_green=42
	bg_yellow=43
	bg_blue=44
	bg_magenta=45
	bg_cyan=46
	bg_white=47

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
function COLORIZE2()
{
	local _COLR; _COLR="${1:-RED}"		; shift
	local _LINE; _LINE="$*"

	_COLR="${_COLR^^}"

	if [[ "${_COLR}" =~ "BG" ]]; then
		_MODE=BACKGROUND
		_COLR=${_COLR/_BG}
	else
		_MODE=NORMAL
	fi

	case "$_COLR" in
		"RED")		_COLR_VAL="${fg_red}"				;;
		"GREEN")	_COLR_VAL="${fg_green}"				;;
		"YELLOW")	_COLR_VAL="${fg_yellow}"			;;
		"BLUE")		_COLR_VAL="${fg_blue}"				;;
		"MAGENTA")	_COLR_VAL="${fg_magenta}"			;;
		"CYAN")		_COLR_VAL="${fg_cyan}"				;;
		"WHITE")	_COLR_VAL="${fg_white}"				;;
	esac

	if [[ "$_MODE" == "BACKGROUND" ]]; then
		((_COLR_VAL=$_COLR_VAL + 10))
	fi

	case "$_COLR" in
		"ERROR")		_COLR_ON="${fg_white};${bg_red}"	; _COLR_OFF=0	;;
		"HEADER")		_COLR_ON="${fg_white};${bg_blue}"	; _COLR_OFF=0	;;
		"SUBHEADER")	_COLR_ON="${fg_black};${bg_green}"	; _COLR_OFF=0	;;
		"TEXT")			_COLR_ON="${fg_white};${bg_black}"	; _COLR_OFF=0	;;
		"INVERSE")		_COLR_ON="${fg_black};${bg_white}"	; _COLR_OFF=0	;;
		*)				_COLR_ON="0;${_COLR_VAL}"			; _COLR_OFF=0	;;
	esac

	echo -n -e '\e['${_COLR_ON}'m'
	echo -n -e "${_LINE}"

	if [[ $OPT_YSN_WITH_NEWLINE == NO ]]; then
		:
	elif [[ "|HEADER|SUBHEADER|INVERSE|ERROR|" =~ "$_COLR" ]]; then
		echo -n -e '\e[K'
	fi

	echo -n -e '\e['${_COLR_OFF}'m'
}

#------------------------------------------------------------------------------
#
#------------------------------------------------------------------------------
	printf "$(COLORIZE2 $OPT_TYP "$OPT_LINE")"

	if [[ $OPT_YSN_WITH_NEWLINE == YES ]]; then
		printf "\n"
	fi

